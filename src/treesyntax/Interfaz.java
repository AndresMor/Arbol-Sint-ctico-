/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package treesyntax;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Visitante
 */
public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    Lienzo lienzo;
    TranD trandVerificacion;
    ArrayList<Nodo> Nodos = new ArrayList();


    public Interfaz() {
        initComponents();
        //lienzo = new Lienzo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Canvas = new javax.swing.JPanel();
        Text = new javax.swing.JTextField();
        Btn_Create = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JNodos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        JTranD = new javax.swing.JTable();
        TextCheck = new javax.swing.JTextField();
        Btn_Check = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout CanvasLayout = new javax.swing.GroupLayout(Canvas);
        Canvas.setLayout(CanvasLayout);
        CanvasLayout.setHorizontalGroup(
            CanvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 933, Short.MAX_VALUE)
        );
        CanvasLayout.setVerticalGroup(
            CanvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 337, Short.MAX_VALUE)
        );

        Btn_Create.setText("Create");
        Btn_Create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_CreateActionPerformed(evt);
            }
        });

        JNodos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nodo", "PPOS", "UPOS", "SGPOS"
            }
        ));
        jScrollPane1.setViewportView(JNodos);

        JTranD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(JTranD);

        Btn_Check.setText("Check");
        Btn_Check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_CheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(Canvas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Btn_Create)
                                .addGap(68, 68, 68))
                            .addComponent(Text, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                            .addComponent(TextCheck)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(Btn_Check)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Btn_Create)
                        .addGap(17, 17, 17)
                        .addComponent(TextCheck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Btn_Check))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Canvas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Btn_CreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_CreateActionPerformed
        // TODO add your handling code here:
        super.paint(Canvas.getGraphics());
        Arbol tree = new Arbol();
        String RegularEx = RegEx.infixToPostfix(Text.getText() + "#");
        System.out.println(RegularEx);
        char[] datos = RegularEx.toCharArray();
        Nodo raiz = tree.MakeTree(datos);
        tree.setRaiz(raiz);
        // Obtiene hojas
        tree.hacerEstructuraSiguiente(tree.getContHojas());
        tree.preorden(raiz);
        // Imprime alfabeto y siguientepos
        System.out.println(Arrays.toString(tree.getSiguientePos()));
        System.out.println((tree.getAlfabeto()));
        // Obtiene posicion final para verificar que estados son de finalizaciÃ³n,
        // esta en clase Arbol
        System.out.println("PosFin: " + tree.getPosicionFin());
        // Obtiene estadosD y tranD, usar tranD.getEstadosD().forEach((k,v)->{}); y lo mismo para
        // tranD.getTranD() para iterar los estadosD y tranD
        TranD tranD = new TranD();
        tranD.hacerTranD(tree);
        trandVerificacion = tranD;
        System.out.println("Estados");
        tranD.getEstadosD().forEach((k, v) -> System.out.println("Key: " + k + ": Value: " + v));
        //  System.out.println(tranD.getEstadosD().size());
        System.out.println("TranD");
        tranD.getTranD().forEach((k, v) -> System.out.println("Key: " + k + ": Value: " + v));

        DefaultTableModel TranDModel = new DefaultTableModel();
        TranDModel.addColumn("          ");
        TranDModel.setRowCount(tranD.getTranD().size());
        tree.getAlfabeto().forEach((s) -> TranDModel.addColumn(s));
        TranDModel.addColumn("Posiciones");
        HashMap<Integer, HashMap<String, String>> map = tranD.getTranD();
        int i = 0;
        for (Map.Entry<Integer, HashMap<String, String>> entry : map.entrySet()) {
            HashMap<String, String> map2 = entry.getValue();
            TranDModel.setValueAt(getCharForNumber(entry.getKey()), i, 0);
            for (Map.Entry<String, String> entry2 : map2.entrySet()) {
                TranDModel.setValueAt(getCharForNumber(Integer.parseInt(entry2.getValue())), entry.getKey() - 1, getPosForLetters(entry2.getKey(), tree.getAlfabeto().toArray()));
            }
            i++;
        }
        HashMap<String, Integer> mapp = tranD.getEstadosD();
        for (Map.Entry<String, Integer> entry : mapp.entrySet()) {
            //System.out.println(entry.getKey()+" = "+entry.getValue());
            if (entry.getKey().contains("" + tree.getPosicionFin())) {
                TranDModel.setValueAt(getCharForNumber(entry.getValue()) + "*", entry.getValue() - 1, 0);
            }
            TranDModel.setValueAt(entry.getKey(), entry.getValue() - 1, tree.getAlfabeto().size() + 1);
        }
        JTranD.setModel(TranDModel);
        Nodos.removeAll(Nodos);
        inOrder(raiz);
        DefaultTableModel NodeModel = new DefaultTableModel();
        String Header[] = {"Nodo", "PPOS", "UPOS", "SPOS"};
        NodeModel.setColumnIdentifiers(Header);
        Set<Integer>[] sgpos = tree.getSiguientePos();
        int j = 0;
        for (Nodo n : Nodos) {
            if (tree.isOperator(n.valor)) {
                NodeModel.addRow(new Object[]{n.valor, n.getPrimeraPos(), n.getUltimaPos(), " "});
            } else if (n.valor == '&') {
                NodeModel.addRow(new Object[]{n.valor, " ", " ", " "});
            } else {
                NodeModel.addRow(new Object[]{n.valor, n.getPrimeraPos(), n.getUltimaPos(), sgpos[j]});
                j++;
            }
        }

        JNodos.setModel(NodeModel);

        Lienzo objLienzo = new Lienzo();
        objLienzo.setObjArbol(tree);
        objLienzo.paint(Canvas.getGraphics());
        Canvas.add(objLienzo);
    }//GEN-LAST:event_Btn_CreateActionPerformed

    private void Btn_CheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_CheckActionPerformed
        // TODO add your handling code here:
//        String check = TextCheck.getText();
//        HashMap<Integer, HashMap<String, String>> map = tranD.getTranD();
//        int i = 0;
//        for (Map.Entry<Integer, HashMap<String, String>> entry : map.entrySet()) {
//            HashMap<String, String> map2 = entry.getValue();
//            for (Map.Entry<String, String> entry2 : map2.entrySet()) {
//                System.out.println(entry2.getKey() + " = " + entry2.getValue());
//            }
//        }

    }//GEN-LAST:event_Btn_CheckActionPerformed

    public static String getCharForNumber(int i) {
        return i > 0 && i < 27 ? String.valueOf((char) (i + 64)) : null;
    }

    public static int getPosForLetters(String letter, Object[] alphabet) {
        for (int i = 0; i < alphabet.length; i++) {
            if (letter.equals(alphabet[i])) {
                return i + 1;
            }
        }
        return 0;
    }

    private void inOrder(Nodo node) {
        if (node != null) {
            inOrder(node.hijo_izq);
            //System.out.println(node.valor);
            Nodos.add(node);
            inOrder(node.hijo_der);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_Check;
    private javax.swing.JButton Btn_Create;
    private javax.swing.JPanel Canvas;
    private javax.swing.JTable JNodos;
    private javax.swing.JTable JTranD;
    private javax.swing.JTextField Text;
    private javax.swing.JTextField TextCheck;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
